name: Build and Release Linux Kernel and Initramfs for Multiple Platforms (Test Workflow)

on:
  workflow_dispatch:

jobs:
  setup-environment:
    name: Set up Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential bc git wget cpio flex bison libssl-dev gcc-aarch64-linux-gnu gcc-riscv64-linux-gnu

  build-buildroot:
    name: Build Initramfs
    runs-on: ubuntu-latest
    needs: setup-environment
    strategy:
      matrix:
        platform: [qemu-aarch64-virt, qemu-riscv64-virt]
        arch: [aarch64, riscv64]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Simulate Buildroot Build
        env:
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.arch }}
        run: |
          echo "Simulating Buildroot build for platform $PLATFORM and architecture $ARCH" > buildroot-${PLATFORM}-${ARCH}.txt

      - name: Create Initramfs Release
        id: create_buildroot_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: initramfs-${{ matrix.platform }}
          release_name: Initramfs for ${{ matrix.platform }}
          draft: false
          prerelease: false

      - name: Upload Initramfs
        id: upload-buildroot-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_buildroot_release.outputs.upload_url }}
          asset_path: ./buildroot-${{ matrix.platform }}-${{ matrix.arch }}.txt
          asset_name: buildroot-${{ matrix.platform }}-${{ matrix.arch }}.txt
          label: Buildroot Log for ${{ matrix.platform }}-${{ matrix.arch }}

  build-linux:
    name: Build Linux Kernel
    runs-on: ubuntu-latest
    needs: [setup-environment, build-buildroot]
    strategy:
      matrix:
        platform: [qemu-aarch64-virt, qemu-riscv64-virt]
        arch: [aarch64, riscv64]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Simulate Linux Kernel Build
        env:
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.arch }}
        run: |
          echo "Simulating Linux Kernel build for platform $PLATFORM and architecture $ARCH" > linux-kernel-${PLATFORM}-${ARCH}.txt

      - name: Create Linux Kernel Release
        id: create_linux_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: linux-${{ matrix.platform }}
          release_name: Linux Kernel for ${{ matrix.platform }}
          draft: false
          prerelease: false

      - name: Upload Linux Kernel
        id: upload-linux-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_linux_release.outputs.upload_url }}
          asset_path: ./linux-kernel-${{ matrix.platform }}-${{ matrix.arch }}.txt
          asset_name: linux-kernel-${{ matrix.platform }}-${{ matrix.arch }}.txt
          label: Linux Kernel Log for ${{ matrix.platform }}-${{ matrix.arch }}
