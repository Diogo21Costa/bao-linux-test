on:
  workflow_dispatch:

name: Create Release with Placeholder Files

jobs:
  build:
    name: Create and Upload Release Asset
    runs-on: ubuntu-latest
    env:  # Define PLATFORMS as an environment variable here
      PLATFORMS: "qemu-aarch64-virt qemu-riscv64-virt"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create placeholder files for each platform
      run: |
        # Loop through platforms and architectures
        for PLATFORM in $PLATFORMS; do
          # Derive the architecture based on the platform
          if [ "$PLATFORM" == "qemu-aarch64-virt" ]; then
            ARCH="aarch64"
          elif [ "$PLATFORM" == "qemu-riscv64-virt" ]; then
            ARCH="riscv64"
          fi
          
          # Create empty initramfs placeholder .cpio file
          touch "initramfs_${PLATFORM}.cpio"
          tar -czf "initramfs_${PLATFORM}.tar.gz" "initramfs_${PLATFORM}.cpio"
          
          # Create empty kernel image placeholder .Image file
          touch "Image-${PLATFORM}"
          tar -czf "Image-${PLATFORM}.tar.gz" "Image-${PLATFORM}"
        done

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false

    - name: Upload Release Assets
      id: upload-release-assets
      run: |
        # Loop through platforms and upload corresponding files
        for PLATFORM in $PLATFORMS; do
          # Upload initramfs tarball
          echo "Uploading initramfs_${PLATFORM}.tar.gz"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/gzip" \
            --data-binary @"initramfs_${PLATFORM}.tar.gz" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=initramfs_${PLATFORM}.tar.gz"

          # Upload kernel image tarball
          echo "Uploading Image-${PLATFORM}.tar.gz"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/gzip" \
            --data-binary @"Image-${PLATFORM}.tar.gz" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.create_release.outputs.id }}/assets?name=Image-${PLATFORM}.tar.gz"
        done
